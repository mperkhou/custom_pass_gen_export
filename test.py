from password_gen import PasswordGenerator
import json
CONFIG_PATH = 'config.json'

Fail_characters = "34kS682;"
Fail_length = "A23"
Fail_consecutive = "tyr1piiltfWag7"
Fail_occurrences = "A1A02A93A78"
Fail_verboten = "421spamduylFwag3"
good = "421sprmduylfwaG3"

BADS = [(" ".join(x.split("_")), globals()[x]) for x in globals() if x.startswith('Fail_')]

def passfail(expected, actual):
    if expected == actual:
        return "pass"
    return "fail"

def print_test_results(results: dict):
    for desc, result in results.items():
        print(f"{desc}: {result}")

""" 
with open(CONFIG_PATH, 'rt') as f:
    config = f.read() """

config = {}
with open(CONFIG_PATH, 'rt') as json_string:
    config = json.load(json_string)


pgen = PasswordGenerator(config)
new_password = pgen.new()

positive_tests = {}
positive_tests['Newly generated password'] = passfail(True, pgen.allowed(new_password))
positive_tests['A test password'] = passfail(True, pgen.allowed(good))

negative_tests = {}
for desc, bad in BADS:
    negative_tests[desc] = passfail(False, pgen.allowed(bad))
    

print(f"\nNew password generated by PasswordGenerator.new():"
       "\n=================================================="
      f"\n{new_password}\n")

print("Tests for the 'allow()' method:")
print("===============================")
print("Positive tests:")
print("---------------")
print_test_results(positive_tests)
print("\nNegative tests:")
print("-----------------")
print_test_results(negative_tests)